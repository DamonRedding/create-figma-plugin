{"version":3,"file":"toggle-d38d149f.js","sources":["../../src/components/toggle/toggle.tsx"],"sourcesContent":["import { ComponentChildren, h } from 'preact'\nimport { useCallback } from 'preact/hooks'\n\nimport { Event, EventHandler } from '../../types/event-handler.js'\nimport { FocusableComponentProps } from '../../types/focusable-component-props.js'\nimport { createClassName } from '../../utilities/create-class-name.js'\nimport { createComponent } from '../../utilities/create-component.js'\nimport { noop } from '../../utilities/no-op.js'\nimport styles from './toggle.module.css'\n\nexport interface ToggleProps extends FocusableComponentProps<HTMLInputElement> {\n  children: ComponentChildren\n  disabled?: boolean\n  onChange?: EventHandler.onChange<HTMLInputElement>\n  onValueChange?: EventHandler.onValueChange<boolean>\n  value: boolean\n}\n\nexport const Toggle = createComponent<HTMLInputElement, ToggleProps>(function ({\n  children,\n  disabled = false,\n  onChange = noop,\n  onKeyDown = noop,\n  onValueChange = noop,\n  propagateEscapeKeyDown = true,\n  value = false,\n  ...rest\n}) {\n  const handleChange = useCallback(\n    function (event: Event.onChange<HTMLInputElement>) {\n      onChange(event)\n      const newValue = event.currentTarget.checked === true\n      onValueChange(newValue)\n    },\n    [onChange, onValueChange]\n  )\n\n  const handleKeyDown = useCallback(\n    function (event: Event.onKeyDown<HTMLInputElement>) {\n      onKeyDown(event)\n      if (event.key === 'Escape') {\n        if (propagateEscapeKeyDown === false) {\n          event.stopPropagation()\n        }\n        event.currentTarget.blur()\n      }\n    },\n    [propagateEscapeKeyDown, onKeyDown]\n  )\n\n  return (\n    <label\n      class={createClassName([\n        styles.toggle,\n        disabled === true ? styles.disabled : null\n      ])}\n    >\n      <input\n        {...rest}\n        checked={value === true}\n        class={styles.input}\n        disabled={disabled === true}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        tabIndex={0}\n        type=\"checkbox\"\n      />\n      <div class={styles.box} />\n      <div class={styles.switch} />\n      <div class={styles.children}>{children}</div>\n    </label>\n  )\n})\n"],"names":["Toggle","createComponent","children","disabled","onChange","noop","onKeyDown","onValueChange","propagateEscapeKeyDown","value","rest","handleChange","useCallback","event","newValue","currentTarget","checked","handleKeyDown","key","stopPropagation","blur","_jsxs","class","createClassName","styles","toggle","_jsx","input","tabIndex","type","box","switch"],"mappings":"kYAkBaA,EAASC,EAA+C,SAAU,CAC7EC,SAAAA,EACAC,SAAAA,EAAW,GACXC,SAAAA,EAAWC,EACXC,UAAAA,EAAYD,EACZE,cAAAA,EAAgBF,EAChBG,uBAAAA,EAAyB,GACzBC,MAAAA,EAAQ,GACR,GAAGC,CACL,EAAG,CACKC,MAAAA,EAAeC,EACnB,SAAUC,EAAyC,CACjDT,EAASS,CAAK,EACRC,MAAAA,EAAWD,EAAME,cAAcC,UAAY,GACjDT,EAAcO,CAAQ,CAAA,EAExB,CAACV,EAAUG,CAAa,CAC1B,EAEMU,EAAgBL,EACpB,SAAUC,EAA0C,CAClDP,EAAUO,CAAK,EACXA,EAAMK,MAAQ,WACZV,IAA2B,IAC7BK,EAAMM,gBAAgB,EAExBN,EAAME,cAAcK,OACtB,EAEF,CAACZ,EAAwBF,CAAS,CACpC,EAEA,OACEe,EAAA,QAAA,CACEC,MAAOC,EAAgB,CACrBC,EAAOC,OACPtB,IAAa,GAAOqB,EAAOrB,SAAW,IAAI,CAC3C,EAAED,UAEHwB,EAAA,QAAA,CAAA,GACMhB,EACJM,QAASP,IAAU,GACnBa,MAAOE,EAAOG,MACdxB,SAAUA,IAAa,GACvBC,SAAUO,EACVL,UAAWW,EACXW,SAAU,EACVC,KAAK,UAAA,CACN,EACDH,EAAA,MAAA,CAAKJ,MAAOE,EAAOM,GAAAA,CAAM,EACzBJ,EAAA,MAAA,CAAKJ,MAAOE,EAAOO,MAAAA,CAAS,EAC5BL,EAAA,MAAA,CAAKJ,MAAOE,EAAOtB,SAASA,SAAAA,CAAAA,CAAgB,CAAC,CAAA,CACxC,CAEX,CAAC"}