{"version":3,"file":"radio-buttons-144906ad.js","sources":["../../src/components/radio-buttons/radio-buttons.tsx"],"sourcesContent":["import { ComponentChildren, h, JSX } from 'preact'\nimport { useCallback } from 'preact/hooks'\n\nimport { Stack, StackSpace } from '../../layout/stack/stack.js'\nimport { OnValueChange, Props } from '../../types/types.js'\nimport { createClassName } from '../../utilities/create-class-name.js'\nimport styles from './radio-buttons.module.css'\n\nconst ITEM_ID_DATA_ATTRIBUTE_NAME = 'data-radio-buttons-item-id'\n\nexport type RadioButtonsProps<\n  Name extends string,\n  Value extends boolean | number | string\n> = {\n  disabled?: boolean\n  name?: Name\n  onChange?: OmitThisParameter<JSX.GenericEventHandler<HTMLInputElement>>\n  onValueChange?: OnValueChange<Value, Name>\n  options: Array<RadioButtonsOption<Value>>\n  propagateEscapeKeyDown?: boolean\n  space?: StackSpace\n  value: null | Value\n}\nexport type RadioButtonsOption<\n  Value extends boolean | number | string = string\n> = {\n  disabled?: boolean\n  children?: ComponentChildren\n  value: Value\n}\n\nexport function RadioButtons<\n  Name extends string,\n  Value extends boolean | number | string\n>({\n  disabled = false,\n  name,\n  onChange = function () {},\n  onValueChange = function () {},\n  options,\n  propagateEscapeKeyDown = true,\n  space = 'small',\n  value,\n  ...rest\n}: Props<HTMLInputElement, RadioButtonsProps<Name, Value>>): JSX.Element {\n  const handleChange = useCallback(\n    function (event: JSX.TargetedEvent<HTMLInputElement>): void {\n      const id = event.currentTarget.getAttribute(\n        ITEM_ID_DATA_ATTRIBUTE_NAME\n      ) as string\n      const newValue = options[parseInt(id, 10)].value\n      onValueChange(newValue, name)\n      onChange(event)\n    },\n    [name, onChange, onValueChange, options]\n  )\n\n  const handleKeyDown = useCallback(\n    function (event: JSX.TargetedKeyboardEvent<HTMLInputElement>): void {\n      if (event.key !== 'Escape') {\n        return\n      }\n      if (propagateEscapeKeyDown === false) {\n        event.stopPropagation()\n      }\n      event.currentTarget.blur()\n    },\n    [propagateEscapeKeyDown]\n  )\n\n  return (\n    <div class={styles.radioButtons}>\n      <Stack space={space}>\n        {options.map(function (\n          option: RadioButtonsOption<Value>,\n          index: number\n        ): JSX.Element {\n          const children =\n            typeof option.children === 'undefined'\n              ? `${option.value}`\n              : option.children\n          const isOptionDisabled = disabled === true || option.disabled === true\n          return (\n            <label\n              key={index}\n              class={createClassName([\n                styles.label,\n                isOptionDisabled === true ? styles.disabled : null\n              ])}\n            >\n              <input\n                {...rest}\n                checked={value === option.value}\n                class={styles.input}\n                disabled={isOptionDisabled === true}\n                name={name}\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n                tabIndex={isOptionDisabled === true ? -1 : 0}\n                type=\"radio\"\n                value={`${option.value}`}\n                {...{ [ITEM_ID_DATA_ATTRIBUTE_NAME]: `${index}` }}\n              />\n              <div class={styles.fill} />\n              <div class={styles.border} />\n              <div class={styles.children}>{children}</div>\n            </label>\n          )\n        })}\n      </Stack>\n    </div>\n  )\n}\n"],"names":["ITEM_ID_DATA_ATTRIBUTE_NAME","RadioButtons","disabled","name","onChange","onValueChange","options","propagateEscapeKeyDown","space","value","rest","handleChange","useCallback","event","id","currentTarget","getAttribute","newValue","parseInt","handleKeyDown","key","stopPropagation","blur","_jsx","class","styles","radioButtons","children","Stack","map","option","index","isOptionDisabled","_jsxs","createClassName","label","checked","input","onKeyDown","tabIndex","type","fill","border"],"mappings":"qaAQMA,EAA8B,6BAuB7B,SAASC,EAGd,CACAC,SAAAA,EAAW,GACXC,KAAAA,EACAC,SAAAA,EAAW,UAAY,CAAC,EACxBC,cAAAA,EAAgB,UAAY,CAAC,EAC7BC,QAAAA,EACAC,uBAAAA,EAAyB,GACzBC,MAAAA,EAAQ,QACRC,MAAAA,EACA,GAAGC,CACoD,EAAgB,CACjEC,MAAAA,EAAeC,EACnB,SAAUC,EAAkD,CAC1D,MAAMC,EAAKD,EAAME,cAAcC,aAC7BhB,CACF,EACMiB,EAAWX,EAAQY,SAASJ,EAAI,EAAE,CAAC,EAAEL,MAC3CJ,EAAcY,EAAUd,CAAI,EAC5BC,EAASS,CAAK,GAEhB,CAACV,EAAMC,EAAUC,EAAeC,CAAO,CACzC,EAEMa,EAAgBP,EACpB,SAAUC,EAA0D,CAC9DA,EAAMO,MAAQ,WAGdb,IAA2B,IAC7BM,EAAMQ,gBAAgB,EAExBR,EAAME,cAAcO,OAAK,EAE3B,CAACf,CAAsB,CACzB,EAEA,OACEgB,EAAA,MAAA,CAAKC,MAAOC,EAAOC,aAAaC,SAC9BJ,EAACK,EAAK,CAACpB,MAAAA,EAAamB,SACjBrB,EAAQuB,IAAI,SACXC,EACAC,EACa,CACPJ,MAAAA,EACJ,OAAOG,EAAOH,SAAa,IACtB,GAAEG,EAAOrB,KAAM,GAChBqB,EAAOH,SACPK,EAAmB9B,IAAa,IAAQ4B,EAAO5B,WAAa,GAClE,OACE+B,EAAA,QAAA,CAEET,MAAOU,EAAgB,CACrBT,EAAOU,MACPH,IAAqB,GAAOP,EAAOvB,SAAW,IAAI,CACnD,EAAEyB,UAEHJ,EAAA,QAAA,CAAA,GACMb,EACJ0B,QAAS3B,IAAUqB,EAAOrB,MAC1Be,MAAOC,EAAOY,MACdnC,SAAU8B,IAAqB,GAC/B7B,KAAAA,EACAC,SAAUO,EACV2B,UAAWnB,EACXoB,SAAUP,IAAqB,GAAO,GAAK,EAC3CQ,KAAK,QACL/B,MAAQ,GAAEqB,EAAOrB,KAAM,GACjB,CAACT,CAA2B,EAAI,GAAE+B,CAAM,EAAA,CAC/C,EACDR,EAAA,MAAA,CAAKC,MAAOC,EAAOgB,IAAAA,CAAO,EAC1BlB,EAAA,MAAA,CAAKC,MAAOC,EAAOiB,MAAAA,CAAS,EAC5BnB,EAAA,MAAA,CAAKC,MAAOC,EAAOE,SAASA,SAAAA,CAAAA,CAAgB,CAAC,GArBxCI,CAsBA,CAAA,CAEV,CAAA,CACI,CAAA,CACJ,CAET"}