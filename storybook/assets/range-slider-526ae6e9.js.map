{"version":3,"file":"range-slider-526ae6e9.js","sources":["../../src/components/range-slider/range-slider.tsx"],"sourcesContent":["import { h } from 'preact'\nimport { useCallback } from 'preact/hooks'\n\nimport { Event, EventHandler } from '../../types/event-handler.js'\nimport { FocusableComponentProps } from '../../types/focusable-component-props.js'\nimport { createClassName } from '../../utilities/create-class-name.js'\nimport { createComponent } from '../../utilities/create-component.js'\nimport { noop } from '../../utilities/no-op.js'\nimport styles from './range-slider.module.css'\n\nexport interface RangeSliderProps\n  extends FocusableComponentProps<HTMLInputElement> {\n  disabled?: boolean\n  increment?: number\n  maximum: number\n  minimum: number\n  onInput?: EventHandler.onInput<HTMLInputElement>\n  onNumericValueInput?: EventHandler.onValueChange<number>\n  onValueInput?: EventHandler.onValueChange<string>\n  value: string\n}\n\nexport const RangeSlider = createComponent<HTMLInputElement, RangeSliderProps>(\n  function (\n    {\n      disabled = false,\n      increment = 1,\n      maximum,\n      minimum,\n      onInput = noop,\n      onKeyDown = noop,\n      onNumericValueInput = noop,\n      onValueInput = noop,\n      propagateEscapeKeyDown = true,\n      value,\n      ...rest\n    },\n    ref\n  ) {\n    if (minimum >= maximum) {\n      throw new Error('`minimum` must be less than `maximum`')\n    }\n\n    const handleInput = useCallback(\n      function (event: Event.onInput<HTMLInputElement>) {\n        onInput(event)\n        const value = event.currentTarget.value\n        onValueInput(value)\n        onNumericValueInput(parseFloat(value))\n      },\n      [onInput, onNumericValueInput, onValueInput]\n    )\n\n    const handleKeyDown = useCallback(\n      function (event: Event.onKeyDown<HTMLInputElement>) {\n        onKeyDown(event)\n        if (event.key === 'Escape') {\n          if (propagateEscapeKeyDown === false) {\n            event.stopPropagation()\n          }\n          event.currentTarget.blur()\n        }\n      },\n      [onKeyDown, propagateEscapeKeyDown]\n    )\n\n    return (\n      <label\n        class={createClassName([\n          styles.rangeSlider,\n          disabled === true ? styles.disabled : null\n        ])}\n      >\n        <input\n          {...rest}\n          ref={ref}\n          class={styles.input}\n          disabled={disabled}\n          max={maximum}\n          min={minimum}\n          onInput={handleInput}\n          onKeyDown={handleKeyDown}\n          step={increment}\n          type=\"range\"\n          value={value}\n        />\n        <div class={styles.border} />\n      </label>\n    )\n  }\n)\n"],"names":["RangeSlider","createComponent","disabled","increment","maximum","minimum","onInput","noop","onKeyDown","onNumericValueInput","onValueInput","propagateEscapeKeyDown","value","rest","ref","Error","handleInput","useCallback","event","currentTarget","parseFloat","handleKeyDown","key","stopPropagation","blur","_jsxs","class","createClassName","styles","rangeSlider","children","_jsx","input","max","min","step","type","border"],"mappings":"sVAsBaA,EAAcC,EACzB,SACE,CACEC,SAAAA,EAAW,GACXC,UAAAA,EAAY,EACZC,QAAAA,EACAC,QAAAA,EACAC,QAAAA,EAAUC,EACVC,UAAAA,EAAYD,EACZE,oBAAAA,EAAsBF,EACtBG,aAAAA,EAAeH,EACfI,uBAAAA,EAAyB,GACzBC,MAAAA,EACA,GAAGC,CACL,EACAC,EACA,CACA,GAAIT,GAAWD,EACP,MAAA,IAAIW,MAAM,uCAAuC,EAGnDC,MAAAA,EAAcC,EAClB,SAAUC,EAAwC,CAChDZ,EAAQY,CAAK,EACPN,MAAAA,EAAQM,EAAMC,cAAcP,MAClCF,EAAaE,CAAK,EACEQ,EAAAA,WAAWR,CAAK,CAAC,CAEvC,EAAA,CAACN,EAASG,EAAqBC,CAAY,CAC7C,EAEMW,EAAgBJ,EACpB,SAAUC,EAA0C,CAClDV,EAAUU,CAAK,EACXA,EAAMI,MAAQ,WACZX,IAA2B,IAC7BO,EAAMK,gBAAgB,EAExBL,EAAMC,cAAcK,OACtB,EAEF,CAAChB,EAAWG,CAAsB,CACpC,EAEA,OACEc,EAAA,QAAA,CACEC,MAAOC,EAAgB,CACrBC,EAAOC,YACP3B,IAAa,GAAO0B,EAAO1B,SAAW,IAAI,CAC3C,EAAE4B,UAEHC,EAAA,QAAA,CAAA,GACMlB,EACJC,IAAAA,EACAY,MAAOE,EAAOI,MACd9B,SAAAA,EACA+B,IAAK7B,EACL8B,IAAK7B,EACLC,QAASU,EACTR,UAAWa,EACXc,KAAMhC,EACNiC,KAAK,QACLxB,MAAAA,CAAAA,CACD,EACDmB,EAAA,MAAA,CAAKL,MAAOE,EAAOS,MAAAA,CAAS,CAAC,CAAA,CACxB,CAEX,CACF"}