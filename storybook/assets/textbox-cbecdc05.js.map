{"version":3,"file":"textbox-cbecdc05.js","sources":["../../src/components/textbox/textbox/private/raw-textbox.tsx","../../src/components/textbox/textbox/textbox.tsx"],"sourcesContent":["import { MIXED_STRING } from '@create-figma-plugin/utilities'\nimport { h, RefObject } from 'preact'\nimport { useCallback, useRef, useState } from 'preact/hooks'\n\nimport { Event, EventHandler } from '../../../../types/event-handler.js'\nimport { FocusableComponentProps } from '../../../../types/focusable-component-props.js'\nimport { createComponent } from '../../../../utilities/create-component.js'\nimport { getCurrentFromRef } from '../../../../utilities/get-current-from-ref.js'\nimport { noop } from '../../../../utilities/no-op.js'\nimport { isKeyCodeCharacterGenerating } from '../../private/is-keycode-character-generating.js'\n\nconst EMPTY_STRING = ''\n\nexport interface RawTextboxProps\n  extends FocusableComponentProps<HTMLInputElement> {\n  disabled?: boolean\n  onBlur?: EventHandler.onBlur<HTMLInputElement>\n  onFocus?: EventHandler.onFocus<HTMLInputElement>\n  onMouseDown?: EventHandler.onMouseUp<HTMLInputElement>\n  onInput?: EventHandler.onInput<HTMLInputElement>\n  onValueInput?: EventHandler.onValueChange<string>\n  password?: boolean\n  placeholder?: string\n  revertOnEscapeKeyDown?: boolean\n  spellCheck?: boolean\n  validateOnBlur?: (value: string) => string | boolean\n  value: string\n}\n\nexport const RawTextbox = createComponent<HTMLInputElement, RawTextboxProps>(\n  function (\n    {\n      disabled = false,\n      onBlur = noop,\n      onFocus = noop,\n      onInput = noop,\n      onKeyDown = noop,\n      onMouseDown = noop,\n      onValueInput = noop,\n      password = false,\n      placeholder,\n      propagateEscapeKeyDown = true,\n      revertOnEscapeKeyDown = false,\n      spellCheck = false,\n      validateOnBlur,\n      value,\n      ...rest\n    },\n    ref\n  ) {\n    const inputElementRef: RefObject<HTMLInputElement> = useRef(null)\n\n    const [originalValue, setOriginalValue] = useState(EMPTY_STRING) // Value of the textbox when it was initially focused\n\n    const setTextboxValue = useCallback(function (value: string) {\n      const inputElement = getCurrentFromRef(inputElementRef)\n      inputElement.value = value\n      const inputEvent = new window.Event('input', {\n        bubbles: true,\n        cancelable: true\n      })\n      inputElement.dispatchEvent(inputEvent)\n    }, [])\n\n    const handleBlur = useCallback(\n      function (event: Event.onBlur<HTMLInputElement>) {\n        onBlur(event)\n        if (typeof validateOnBlur !== 'undefined') {\n          const result = validateOnBlur(value)\n          if (typeof result === 'string') {\n            // Set to the value returned by `validateOnBlur`\n            setTextboxValue(result)\n            setOriginalValue(EMPTY_STRING)\n            return\n          }\n          if (result === false) {\n            // Revert to the original value\n            if (value !== originalValue) {\n              setTextboxValue(originalValue)\n            }\n            setOriginalValue(EMPTY_STRING)\n            return\n          }\n        }\n        setOriginalValue(EMPTY_STRING)\n      },\n      [onBlur, originalValue, setTextboxValue, validateOnBlur, value]\n    )\n\n    const handleFocus = useCallback(\n      function (event: Event.onFocus<HTMLInputElement>) {\n        onFocus(event)\n        setOriginalValue(value)\n        event.currentTarget.select()\n      },\n      [onFocus, value]\n    )\n\n    const handleInput = useCallback(\n      function (event: Event.onInput<HTMLInputElement>) {\n        onInput(event)\n        const newValue = event.currentTarget.value\n        onValueInput(newValue)\n      },\n      [onInput, onValueInput]\n    )\n\n    const handleKeyDown = useCallback(\n      function (event: Event.onKeyDown<HTMLInputElement>) {\n        onKeyDown(event)\n        if (event.key === 'Escape') {\n          if (revertOnEscapeKeyDown === true) {\n            setTextboxValue(originalValue)\n            setOriginalValue(EMPTY_STRING)\n          }\n          if (propagateEscapeKeyDown === false) {\n            event.stopPropagation()\n          }\n          event.currentTarget.blur()\n          return\n        }\n        if (\n          value === MIXED_STRING &&\n          isKeyCodeCharacterGenerating(event.keyCode) === false\n        ) {\n          // Prevent changing the cursor position with the keyboard if `value` is `MIXED_STRING`\n          event.preventDefault()\n          event.currentTarget.select()\n        }\n      },\n      [\n        onKeyDown,\n        originalValue,\n        propagateEscapeKeyDown,\n        revertOnEscapeKeyDown,\n        setTextboxValue,\n        value\n      ]\n    )\n\n    const handleMouseDown = useCallback(\n      function (event: Event.onMouseUp<HTMLInputElement>) {\n        onMouseDown(event)\n        if (value === MIXED_STRING) {\n          // Prevent changing the selection if `value` is `MIXED_STRING`\n          event.preventDefault()\n          event.currentTarget.select()\n        }\n      },\n      [onMouseDown, value]\n    )\n\n    const refCallback = useCallback(\n      function (inputElement: null | HTMLInputElement) {\n        inputElementRef.current = inputElement\n        if (ref === null) {\n          return\n        }\n        if (typeof ref === 'function') {\n          ref(inputElement)\n          return\n        }\n        ref.current = inputElement\n      },\n      [ref]\n    )\n\n    return (\n      <input\n        {...rest}\n        ref={refCallback}\n        disabled={disabled === true}\n        onBlur={handleBlur}\n        onFocus={handleFocus}\n        onInput={handleInput}\n        onKeyDown={handleKeyDown}\n        onMouseDown={handleMouseDown}\n        placeholder={placeholder}\n        spellcheck={spellCheck}\n        tabIndex={0}\n        type={password === true ? 'password' : 'text'}\n        value={value === MIXED_STRING ? 'Mixed' : value}\n      />\n    )\n  }\n)\n","import { ComponentChildren, h } from 'preact'\n\nimport { createClassName } from '../../../utilities/create-class-name.js'\nimport { createComponent } from '../../../utilities/create-component.js'\nimport { RawTextbox, RawTextboxProps } from './private/raw-textbox.js'\nimport styles from './textbox.module.css'\n\nexport type TextboxProps = RawTextboxProps & {\n  icon?: ComponentChildren\n  variant?: TextboxVariant\n}\n\nexport type TextboxVariant = 'border' | 'underline'\n\nexport const Textbox = createComponent<HTMLInputElement, TextboxProps>(\n  function ({ icon, variant, ...rest }, ref) {\n    if (typeof icon === 'string' && icon.length !== 1) {\n      throw new Error(`String \\`icon\\` must be a single character: ${icon}`)\n    }\n\n    return (\n      <div\n        class={createClassName([\n          styles.textbox,\n          variant === 'border' ? styles.hasBorder : null,\n          typeof icon === 'undefined' ? null : styles.hasIcon,\n          rest.disabled === true ? styles.disabled : null\n        ])}\n      >\n        <RawTextbox {...rest} ref={ref} class={styles.input} />\n        {typeof icon === 'undefined' ? null : (\n          <div class={styles.icon}>{icon}</div>\n        )}\n        <div class={styles.border} />\n        {variant === 'underline' ? <div class={styles.underline} /> : null}\n      </div>\n    )\n  }\n)\n"],"names":["EMPTY_STRING","RawTextbox","createComponent","disabled","onBlur","noop","onFocus","onInput","onKeyDown","onMouseDown","onValueInput","password","placeholder","propagateEscapeKeyDown","revertOnEscapeKeyDown","spellCheck","validateOnBlur","value","rest","ref","inputElementRef","useRef","originalValue","setOriginalValue","useState","setTextboxValue","useCallback","inputElement","getCurrentFromRef","inputEvent","window","Event","bubbles","cancelable","dispatchEvent","handleBlur","event","result","handleFocus","currentTarget","select","handleInput","newValue","handleKeyDown","key","stopPropagation","blur","MIXED_STRING","isKeyCodeCharacterGenerating","keyCode","preventDefault","handleMouseDown","refCallback","current","_jsx","spellcheck","tabIndex","type","Textbox","icon","variant","length","Error","_jsxs","class","createClassName","styles","textbox","hasBorder","hasIcon","children","input","border","underline"],"mappings":"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"}