{"version":3,"file":"radio-buttons.stories-feddbbed.js","sources":["../../src/components/radio-buttons/radio-buttons.tsx"],"sourcesContent":["import { ComponentChildren, h } from 'preact'\nimport { useCallback } from 'preact/hooks'\n\nimport { Stack, StackSpace } from '../../layout/stack/stack.js'\nimport { Event, EventHandler } from '../../types/event-handler.js'\nimport { FocusableComponentProps } from '../../types/focusable-component-props.js'\nimport { createClassName } from '../../utilities/create-class-name.js'\nimport { createComponent } from '../../utilities/create-component.js'\nimport { noop } from '../../utilities/no-op.js'\nimport { ITEM_ID_DATA_ATTRIBUTE_NAME } from '../../utilities/private/constants.js'\nimport styles from './radio-buttons.module.css'\n\nexport interface RadioButtonsProps\n  extends FocusableComponentProps<HTMLDivElement> {\n  disabled?: boolean\n  onChange?: EventHandler.onChange<HTMLInputElement>\n  onValueChange?: EventHandler.onValueChange<string>\n  options: Array<RadioButtonsOption>\n  space?: StackSpace\n  value: null | string\n}\nexport type RadioButtonsOption = {\n  disabled?: boolean\n  children?: ComponentChildren\n  value: string\n}\n\nexport const RadioButtons = createComponent<HTMLDivElement, RadioButtonsProps>(\n  function (\n    {\n      disabled = false,\n      onChange = noop,\n      onKeyDown = noop,\n      onValueChange = noop,\n      options,\n      propagateEscapeKeyDown = true,\n      space = 'small',\n      value,\n      ...rest\n    },\n    ref\n  ) {\n    const handleChange = useCallback(\n      function (event: Event.onChange<HTMLInputElement>) {\n        onChange(event)\n        const id = event.currentTarget.getAttribute(ITEM_ID_DATA_ATTRIBUTE_NAME)\n        if (id === null) {\n          throw new Error('`id` is `null`')\n        }\n        const newValue = options[parseInt(id, 10)].value\n        onValueChange(newValue)\n      },\n      [onChange, onValueChange, options]\n    )\n\n    const handleKeyDown = useCallback(\n      function (event: Event.onKeyDown<HTMLInputElement>) {\n        onKeyDown(event)\n        if (event.key === 'Escape') {\n          if (propagateEscapeKeyDown === false) {\n            event.stopPropagation()\n          }\n          event.currentTarget.blur()\n        }\n      },\n      [onKeyDown, propagateEscapeKeyDown]\n    )\n\n    return (\n      <div ref={ref} class={styles.radioButtons}>\n        <Stack space={space}>\n          {options.map(function (option: RadioButtonsOption, index: number) {\n            const children =\n              typeof option.children === 'undefined'\n                ? `${option.value}`\n                : option.children\n            const isOptionDisabled =\n              disabled === true || option.disabled === true\n            return (\n              <label\n                key={index}\n                class={createClassName([\n                  styles.label,\n                  isOptionDisabled === true ? styles.disabled : null\n                ])}\n              >\n                <input\n                  {...rest}\n                  checked={value === option.value}\n                  class={styles.input}\n                  disabled={isOptionDisabled === true}\n                  onChange={handleChange}\n                  onKeyDown={handleKeyDown}\n                  tabIndex={0}\n                  type=\"radio\"\n                  value={`${option.value}`}\n                  {...{ [ITEM_ID_DATA_ATTRIBUTE_NAME]: `${index}` }}\n                />\n                <div class={styles.fill} />\n                <div class={styles.border} />\n                <div class={styles.children}>{children}</div>\n              </label>\n            )\n          })}\n        </Stack>\n      </div>\n    )\n  }\n)\n"],"names":["RadioButtons","createComponent","disabled","onChange","noop","onKeyDown","onValueChange","options","propagateEscapeKeyDown","space","value","rest","ref","handleChange","useCallback","event","id","currentTarget","getAttribute","ITEM_ID_DATA_ATTRIBUTE_NAME","Error","newValue","parseInt","handleKeyDown","key","stopPropagation","blur","_jsx","class","styles","radioButtons","children","Stack","map","option","index","isOptionDisabled","_jsxs","createClassName","label","checked","input","tabIndex","type","fill","border"],"mappings":"+oBA2BaA,EAAeC,EAC1B,SACE,CACEC,SAAAA,EAAW,GACXC,SAAAA,EAAWC,EACXC,UAAAA,EAAYD,EACZE,cAAAA,EAAgBF,EAChBG,QAAAA,EACAC,uBAAAA,EAAyB,GACzBC,MAAAA,EAAQ,QACRC,MAAAA,EACA,GAAGC,CACL,EACAC,EACA,CACMC,MAAAA,EAAeC,EACnB,SAAUC,EAAyC,CACjDZ,EAASY,CAAK,EACd,MAAMC,EAAKD,EAAME,cAAcC,aAAaC,CAA2B,EACvE,GAAIH,IAAO,KACH,MAAA,IAAII,MAAM,gBAAgB,EAElC,MAAMC,EAAWd,EAAQe,SAASN,EAAI,EAAE,CAAC,EAAEN,MAC3CJ,EAAce,CAAQ,CAExB,EAAA,CAAClB,EAAUG,EAAeC,CAAO,CACnC,EAEMgB,EAAgBT,EACpB,SAAUC,EAA0C,CAClDV,EAAUU,CAAK,EACXA,EAAMS,MAAQ,WACZhB,IAA2B,IAC7BO,EAAMU,gBAAgB,EAExBV,EAAME,cAAcS,OACtB,EAEF,CAACrB,EAAWG,CAAsB,CACpC,EAEA,OACEmB,EAAA,MAAA,CAAKf,IAAAA,EAAUgB,MAAOC,EAAOC,aAAaC,SACxCJ,EAACK,EAAK,CAACvB,MAAAA,EAAasB,SACjBxB,EAAQ0B,IAAI,SAAUC,EAA4BC,EAAe,CAC1DJ,MAAAA,EACJ,OAAOG,EAAOH,SAAa,IACtB,GAAEG,EAAOxB,KAAM,GAChBwB,EAAOH,SACPK,EACJlC,IAAa,IAAQgC,EAAOhC,WAAa,GAC3C,OACEmC,EAAA,QAAA,CAEET,MAAOU,EAAgB,CACrBT,EAAOU,MACPH,IAAqB,GAAOP,EAAO3B,SAAW,IAAI,CACnD,EAAE6B,UAEHJ,EAAA,QAAA,CAAA,GACMhB,EACJ6B,QAAS9B,IAAUwB,EAAOxB,MAC1BkB,MAAOC,EAAOY,MACdvC,SAAUkC,IAAqB,GAC/BjC,SAAUU,EACVR,UAAWkB,EACXmB,SAAU,EACVC,KAAK,QACLjC,MAAQ,GAAEwB,EAAOxB,KAAM,GACjB,CAACS,CAA2B,EAAI,GAAEgB,CAAM,EAAA,CAC/C,EACDR,EAAA,MAAA,CAAKC,MAAOC,EAAOe,IAAAA,CAAO,EAC1BjB,EAAA,MAAA,CAAKC,MAAOC,EAAOgB,MAAAA,CAAS,EAC5BlB,EAAA,MAAA,CAAKC,MAAOC,EAAOE,SAASA,SAAAA,CAAAA,CAAgB,CAAC,GApBxCI,CAqBA,CAAA,CAEV,CAAA,CACI,CAAA,CACJ,CAET,CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}