{"version":3,"file":"icon-toggle-button-911bd8b2.js","sources":["../../src/components/icon-toggle-button/icon-toggle-button.tsx"],"sourcesContent":["import { ComponentChildren, h } from 'preact'\nimport { useCallback } from 'preact/hooks'\n\nimport { Event, EventHandler } from '../../types/event-handler.js'\nimport { FocusableComponentProps } from '../../types/focusable-component-props.js'\nimport { createClassName } from '../../utilities/create-class-name.js'\nimport { createComponent } from '../../utilities/create-component.js'\nimport { noop } from '../../utilities/no-op.js'\nimport styles from './icon-toggle-button.module.css'\n\nexport interface IconToggleButtonProps\n  extends FocusableComponentProps<HTMLInputElement> {\n  children: ComponentChildren\n  disabled?: boolean\n  onChange?: EventHandler.onChange<HTMLInputElement>\n  onValueChange?: EventHandler.onValueChange<boolean>\n  value: boolean\n}\n\nexport const IconToggleButton = createComponent<\n  HTMLInputElement,\n  IconToggleButtonProps\n>(function (\n  {\n    children,\n    disabled = false,\n    onChange = noop,\n    onKeyDown = noop,\n    onValueChange = noop,\n    propagateEscapeKeyDown = true,\n    value,\n    ...rest\n  },\n  ref\n) {\n  const handleChange = useCallback(\n    function (event: Event.onChange<HTMLInputElement>) {\n      onChange(event)\n      const newValue = event.currentTarget.checked === true\n      onValueChange(newValue)\n    },\n    [onChange, onValueChange]\n  )\n\n  const handleKeyDown = useCallback(\n    function (event: Event.onKeyDown<HTMLInputElement>) {\n      onKeyDown(event)\n      if (event.key === 'Escape') {\n        if (propagateEscapeKeyDown === false) {\n          event.stopPropagation()\n        }\n        event.currentTarget.blur()\n      }\n    },\n    [onKeyDown, propagateEscapeKeyDown]\n  )\n\n  return (\n    <label\n      class={createClassName([\n        styles.iconToggleButton,\n        disabled === true ? styles.disabled : null\n      ])}\n    >\n      <input\n        {...rest}\n        ref={ref}\n        checked={value === true}\n        class={styles.input}\n        disabled={disabled === true}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        tabIndex={0}\n        type=\"checkbox\"\n      />\n      <div class={styles.box}>\n        <div class={styles.icon}>{children}</div>\n      </div>\n    </label>\n  )\n})\n"],"names":["IconToggleButton","createComponent","children","disabled","onChange","noop","onKeyDown","onValueChange","propagateEscapeKeyDown","value","rest","ref","handleChange","useCallback","event","newValue","currentTarget","checked","handleKeyDown","key","stopPropagation","blur","_jsxs","class","createClassName","styles","iconToggleButton","_jsx","input","tabIndex","type","box","icon"],"mappings":"mXAmBaA,EAAmBC,EAG9B,SACA,CACEC,SAAAA,EACAC,SAAAA,EAAW,GACXC,SAAAA,EAAWC,EACXC,UAAAA,EAAYD,EACZE,cAAAA,EAAgBF,EAChBG,uBAAAA,EAAyB,GACzBC,MAAAA,EACA,GAAGC,CACL,EACAC,EACA,CACMC,MAAAA,EAAeC,EACnB,SAAUC,EAAyC,CACjDV,EAASU,CAAK,EACRC,MAAAA,EAAWD,EAAME,cAAcC,UAAY,GACjDV,EAAcQ,CAAQ,CAAA,EAExB,CAACX,EAAUG,CAAa,CAC1B,EAEMW,EAAgBL,EACpB,SAAUC,EAA0C,CAClDR,EAAUQ,CAAK,EACXA,EAAMK,MAAQ,WACZX,IAA2B,IAC7BM,EAAMM,gBAAgB,EAExBN,EAAME,cAAcK,OACtB,EAEF,CAACf,EAAWE,CAAsB,CACpC,EAEA,OACEc,EAAA,QAAA,CACEC,MAAOC,EAAgB,CACrBC,EAAOC,iBACPvB,IAAa,GAAOsB,EAAOtB,SAAW,IAAI,CAC3C,EAAED,UAEHyB,EAAA,QAAA,CAAA,GACMjB,EACJC,IAAAA,EACAM,QAASR,IAAU,GACnBc,MAAOE,EAAOG,MACdzB,SAAUA,IAAa,GACvBC,SAAUQ,EACVN,UAAWY,EACXW,SAAU,EACVC,KAAK,UAAA,CACN,EACDH,EAAA,MAAA,CAAKJ,MAAOE,EAAOM,IAAI7B,SACrByB,EAAA,MAAA,CAAKJ,MAAOE,EAAOO,KAAK9B,SAAAA,CAAAA,CAAgB,CAAA,CACrC,CAAC,CAAA,CACD,CAEX,CAAC"}