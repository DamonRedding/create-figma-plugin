{"version":3,"file":"range-slider-dcea2754.js","sources":["../../src/components/range-slider/range-slider.tsx"],"sourcesContent":["import { h, JSX } from 'preact'\nimport { useCallback } from 'preact/hooks'\n\nimport { OnValueChange, Props } from '../../types/types.js'\nimport { createClassName } from '../../utilities/create-class-name.js'\nimport styles from './range-slider.module.css'\n\nexport type RangeSliderProps<Name extends string> = {\n  disabled?: boolean\n  increment?: number\n  maximum: number\n  minimum: number\n  name?: Name\n  onInput?: OmitThisParameter<JSX.GenericEventHandler<HTMLInputElement>>\n  onNumericValueInput?: OnValueChange<number, Name>\n  onValueInput?: OnValueChange<string, Name>\n  propagateEscapeKeyDown?: boolean\n  value: string\n}\n\nexport function RangeSlider<Name extends string>({\n  disabled = false,\n  increment = 1,\n  maximum,\n  minimum,\n  name,\n  onInput = function () {},\n  onNumericValueInput = function () {},\n  onValueInput = function () {},\n  propagateEscapeKeyDown = true,\n  value,\n  ...rest\n}: Props<HTMLInputElement, RangeSliderProps<Name>>): JSX.Element {\n  const handleInput = useCallback(\n    function (event: JSX.TargetedEvent<HTMLInputElement>) {\n      onInput(event)\n      const value = event.currentTarget.value\n      onValueInput(value, name)\n      onNumericValueInput(parseFloat(value), name)\n    },\n    [name, onInput, onNumericValueInput, onValueInput]\n  )\n\n  const handleKeyDown = useCallback(\n    function (event: JSX.TargetedKeyboardEvent<HTMLInputElement>): void {\n      if (event.key !== 'Escape') {\n        return\n      }\n      if (propagateEscapeKeyDown === false) {\n        event.stopPropagation()\n      }\n      event.currentTarget.blur()\n    },\n    [propagateEscapeKeyDown]\n  )\n\n  return (\n    <label\n      class={createClassName([\n        styles.rangeSlider,\n        disabled === true ? styles.disabled : null\n      ])}\n    >\n      <input\n        class={styles.input}\n        disabled={disabled}\n        max={maximum}\n        min={minimum}\n        onInput={handleInput}\n        onKeyDown={handleKeyDown}\n        step={increment}\n        type=\"range\"\n        value={value}\n        {...rest}\n      />\n      <div class={styles.border} />\n    </label>\n  )\n}\n"],"names":["RangeSlider","disabled","increment","maximum","minimum","name","onInput","onNumericValueInput","onValueInput","propagateEscapeKeyDown","value","rest","handleInput","useCallback","event","currentTarget","parseFloat","handleKeyDown","key","stopPropagation","blur","_jsxs","class","createClassName","styles","rangeSlider","children","_jsx","input","max","min","onKeyDown","step","type","border"],"mappings":"mSAoBO,SAASA,EAAiC,CAC/CC,SAAAA,EAAW,GACXC,UAAAA,EAAY,EACZC,QAAAA,EACAC,QAAAA,EACAC,KAAAA,EACAC,QAAAA,EAAU,UAAY,CAAC,EACvBC,oBAAAA,EAAsB,UAAY,CAAC,EACnCC,aAAAA,EAAe,UAAY,CAAC,EAC5BC,uBAAAA,EAAyB,GACzBC,MAAAA,EACA,GAAGC,CAC4C,EAAgB,CACzDC,MAAAA,EAAcC,EAClB,SAAUC,EAA4C,CACpDR,EAAQQ,CAAK,EACPJ,MAAAA,EAAQI,EAAMC,cAAcL,MAClCF,EAAaE,EAAOL,CAAI,EACJW,EAAAA,WAAWN,CAAK,EAAGL,CAAI,GAE7C,CAACA,EAAMC,EAASC,EAAqBC,CAAY,CACnD,EAEMS,EAAgBJ,EACpB,SAAUC,EAA0D,CAC9DA,EAAMI,MAAQ,WAGdT,IAA2B,IAC7BK,EAAMK,gBAAgB,EAExBL,EAAMC,cAAcK,OAAK,EAE3B,CAACX,CAAsB,CACzB,EAEA,OACEY,EAAA,QAAA,CACEC,MAAOC,EAAgB,CACrBC,EAAOC,YACPxB,IAAa,GAAOuB,EAAOvB,SAAW,IAAI,CAC3C,EAAEyB,UAEHC,EAAA,QAAA,CACEL,MAAOE,EAAOI,MACd3B,SAAAA,EACA4B,IAAK1B,EACL2B,IAAK1B,EACLE,QAASM,EACTmB,UAAWd,EACXe,KAAM9B,EACN+B,KAAK,QACLvB,MAAAA,EAAa,GACTC,CAAAA,CACL,EACDgB,EAAA,MAAA,CAAKL,MAAOE,EAAOU,MAAAA,CAAS,CAAC,CAAA,CACxB,CAEX"}