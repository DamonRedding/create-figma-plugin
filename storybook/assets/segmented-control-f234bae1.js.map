{"version":3,"file":"segmented-control-f234bae1.js","sources":["../../src/components/segmented-control/segmented-control.tsx"],"sourcesContent":["import { ComponentChildren, h } from 'preact'\nimport { useCallback } from 'preact/hooks'\n\nimport { Event, EventHandler } from '../../types/event-handler.js'\nimport { FocusableComponentProps } from '../../types/focusable-component-props.js'\nimport { createClassName } from '../../utilities/create-class-name.js'\nimport { createComponent } from '../../utilities/create-component.js'\nimport { noop } from '../../utilities/no-op.js'\nimport { ITEM_ID_DATA_ATTRIBUTE_NAME } from '../../utilities/private/constants.js'\nimport styles from './segmented-control.module.css'\n\nexport interface SegmentedControlProps\n  extends FocusableComponentProps<HTMLInputElement> {\n  disabled?: boolean\n  onChange?: EventHandler.onChange<HTMLInputElement>\n  onValueChange?: EventHandler.onValueChange<string>\n  options: Array<SegmentedControlOption>\n  value: string\n}\nexport type SegmentedControlOption = {\n  disabled?: boolean\n  children?: ComponentChildren\n  value: string\n}\n\nexport const SegmentedControl = createComponent<\n  HTMLInputElement,\n  SegmentedControlProps\n>(function ({\n  disabled = false,\n  onChange = noop,\n  onKeyDown = noop,\n  onValueChange = noop,\n  options,\n  propagateEscapeKeyDown = true,\n  value,\n  ...rest\n}) {\n  const handleChange = useCallback(\n    function (event: Event.onChange<HTMLInputElement>) {\n      onChange(event)\n      const id = event.currentTarget.getAttribute(ITEM_ID_DATA_ATTRIBUTE_NAME)\n      if (id === null) {\n        throw new Error('`id` is `null`')\n      }\n      const newValue = options[parseInt(id, 10)].value\n      onValueChange(newValue)\n    },\n    [onChange, onValueChange, options]\n  )\n\n  const handleKeyDown = useCallback(\n    function (event: Event.onKeyDown<HTMLInputElement>) {\n      onKeyDown(event)\n      if (event.key === 'Escape') {\n        if (propagateEscapeKeyDown === false) {\n          event.stopPropagation()\n        }\n        event.currentTarget.blur()\n      }\n    },\n    [onKeyDown, propagateEscapeKeyDown]\n  )\n\n  return (\n    <div\n      class={createClassName([\n        styles.segmentedControl,\n        disabled === true ? styles.disabled : null\n      ])}\n    >\n      <div class={styles.labels}>\n        {options.map(function (option: SegmentedControlOption, index: number) {\n          const children =\n            typeof option.children === 'undefined'\n              ? `${option.value}`\n              : option.children\n          const isOptionDisabled = disabled === true || option.disabled === true\n          return (\n            <label key={index} class={styles.label}>\n              <input\n                {...rest}\n                checked={value === option.value}\n                class={styles.input}\n                disabled={isOptionDisabled === true}\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n                tabIndex={0}\n                type=\"radio\"\n                value={`${option.value}`}\n                {...{ [ITEM_ID_DATA_ATTRIBUTE_NAME]: `${index}` }}\n              />\n              <div class={styles.children}>\n                <div\n                  class={typeof children === 'string' ? styles.text : undefined}\n                >\n                  {children}\n                </div>\n              </div>\n            </label>\n          )\n        })}\n      </div>\n      <div class={styles.border} />\n    </div>\n  )\n})\n"],"names":["SegmentedControl","createComponent","disabled","onChange","noop","onKeyDown","onValueChange","options","propagateEscapeKeyDown","value","rest","handleChange","useCallback","event","id","currentTarget","getAttribute","ITEM_ID_DATA_ATTRIBUTE_NAME","Error","newValue","parseInt","handleKeyDown","key","stopPropagation","blur","_jsxs","class","createClassName","styles","segmentedControl","children","_jsx","labels","map","option","index","isOptionDisabled","label","checked","input","tabIndex","type","text","undefined","border"],"mappings":"igBAyBaA,EAAmBC,EAG9B,SAAU,CACVC,SAAAA,EAAW,GACXC,SAAAA,EAAWC,EACXC,UAAAA,EAAYD,EACZE,cAAAA,EAAgBF,EAChBG,QAAAA,EACAC,uBAAAA,EAAyB,GACzBC,MAAAA,EACA,GAAGC,CACL,EAAG,CACKC,MAAAA,EAAeC,EACnB,SAAUC,EAAyC,CACjDV,EAASU,CAAK,EACd,MAAMC,EAAKD,EAAME,cAAcC,aAAaC,CAA2B,EACvE,GAAIH,IAAO,KACH,MAAA,IAAII,MAAM,gBAAgB,EAElC,MAAMC,EAAWZ,EAAQa,SAASN,EAAI,EAAE,CAAC,EAAEL,MAC3CH,EAAca,CAAQ,CAExB,EAAA,CAAChB,EAAUG,EAAeC,CAAO,CACnC,EAEMc,EAAgBT,EACpB,SAAUC,EAA0C,CAClDR,EAAUQ,CAAK,EACXA,EAAMS,MAAQ,WACZd,IAA2B,IAC7BK,EAAMU,gBAAgB,EAExBV,EAAME,cAAcS,OACtB,EAEF,CAACnB,EAAWG,CAAsB,CACpC,EAEA,OACEiB,EAAA,MAAA,CACEC,MAAOC,EAAgB,CACrBC,EAAOC,iBACP3B,IAAa,GAAO0B,EAAO1B,SAAW,IAAI,CAC3C,EAAE4B,UAEHC,EAAA,MAAA,CAAKL,MAAOE,EAAOI,OAAOF,SACvBvB,EAAQ0B,IAAI,SAAUC,EAAgCC,EAAe,CAC9DL,MAAAA,EACJ,OAAOI,EAAOJ,SAAa,IACtB,GAAEI,EAAOzB,KAAM,GAChByB,EAAOJ,SACPM,EAAmBlC,IAAa,IAAQgC,EAAOhC,WAAa,GAClE,OACEuB,EAAA,QAAA,CAAmBC,MAAOE,EAAOS,MAAMP,UACrCC,EAAA,QAAA,CAAA,GACMrB,EACJ4B,QAAS7B,IAAUyB,EAAOzB,MAC1BiB,MAAOE,EAAOW,MACdrC,SAAUkC,IAAqB,GAC/BjC,SAAUQ,EACVN,UAAWgB,EACXmB,SAAU,EACVC,KAAK,QACLhC,MAAQ,GAAEyB,EAAOzB,KAAM,GACjB,CAACQ,CAA2B,EAAI,GAAEkB,CAAM,EAAA,CAC/C,EACDJ,EAAA,MAAA,CAAKL,MAAOE,EAAOE,SAASA,SAC1BC,EAAA,MAAA,CACEL,MAAO,OAAOI,GAAa,SAAWF,EAAOc,KAAOC,OAAUb,SAAAA,CAAAA,CAG3D,CAAA,CACF,CAAC,GAnBIK,CAoBL,CAAA,CAEV,CAAA,CACE,EACLJ,EAAA,MAAA,CAAKL,MAAOE,EAAOgB,MAAAA,CAAS,CAAC,CAAA,CAC1B,CAET,CAAC"}